apiVersion: core.oam.dev/v1beta1
kind: ComponentDefinition
metadata:
  name: serverless-platform
  namespace: default
spec:
  workload:
    definition:
      apiVersion: v1
      kind: ConfigMap
  schematic:
    cue:
      template: |
        import "encoding/json"
        
        
        parameter: {

          replicas: *1 | int


          resources?: {
            [string]: _
          }


          env?: [...{
            name: string
            value?: string
          }]
        }


        output: {
          apiVersion: "v1"
          kind:       "ConfigMap"
          metadata: {

            name: context.name
            labels: {
              "app.oam.dev/component": context.name
            }
          }
          data: {

            replicas: "\(parameter.replicas)"


            if parameter.resources != _|_ {
              resources: json.Marshal(parameter.resources)
            }



            if parameter.env != _|_ {
              env: json.Marshal({
                for e in parameter.env {
                  "\(e.name)": e.value
                }
              })
            }
          }
        }

